{
	"info": {
		"_postman_id": "b97f9278-77a4-45fb-97e6-944f54fd510d",
		"name": "ugram-backend-e2e",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user.username}}\",\n    \"email\": \"{{user.email}}\",\n    \"phoneNumber\": \"{{user.phoneNumber}}\",\n    \"firstName\": \"{{user.firstName}}\",\n    \"lastName\": \"{{user.lastName}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create other user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user.username.other}}\",\n    \"email\": \"{{user.email.other}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.other}}\",\n    \"firstName\": \"{{user.firstName.other}}\",\n    \"lastName\": \"{{user.lastName.other}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const location = pm.response.headers.get(\"Location\");",
									"const postId = location.split(\"/\")[4];",
									"",
									"postman.setEnvironmentVariable(\"post.postId\", postId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{post.reference}}\",\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag}}\",\n        \"{{post.hashtags.secondHashtag}}\"\n    ],\n    \"description\": \"{{post.description}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{user.username}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{user.username}}",
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:username/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"posts"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "{username}",
							"item": [
								{
									"name": "posts",
									"item": [
										{
											"name": "Get user's posts",
											"item": [
												{
													"name": "Username",
													"item": [
														{
															"name": "Non existent",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 404\", () => {",
																			"    pm.response.to.have.status(404);",
																			"});",
																			"",
																			"pm.test(\"Returns non existent error message\", () => {",
																			"    const username = postman.getEnvironmentVariable(\"user.username.2\");",
																			"    const expectedMessage = `User ${username} doesn't exist`;",
																			"",
																			"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username.2}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username.2}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users"
																			]
																		}
																	},
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Valid request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 200\", () => {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Returns list (1 post created)\", () => {",
																	"    pm.expect(pm.response.json().length).to.be.equal(1);",
																	"});",
																	"",
																	"pm.test(\"Returns ID\", () => {",
																	"    pm.expect(pm.response.json()[0]._id).to.not.equal(null);",
																	"});",
																	"",
																	"pm.test(\"Returns reference\", () => {",
																	"    const reference = postman.getEnvironmentVariable(\"post.reference\");",
																	"",
																	"    pm.expect(reference).to.contain(pm.response.json()[0].reference);",
																	"});",
																	"",
																	"pm.test(\"Returns description\", () => {",
																	"    const description = postman.getEnvironmentVariable(\"post.description\");",
																	"",
																	"    pm.expect(description).to.contain(pm.response.json()[0].description);",
																	"});",
																	"",
																	"pm.test(\"Returns hashtags\", () => {",
																	"    const firstHashtag = postman.getEnvironmentVariable(\"post.hashtags.firstHashtag\");",
																	"    const secondHashtag = postman.getEnvironmentVariable(\"post.hashtags.secondHashtag\");",
																	"",
																	"    pm.expect(pm.response.json()[0].hashtags.length).to.be.equal(2);",
																	"    pm.expect(firstHashtag).to.contain(pm.response.json()[0].hashtags[0]);",
																	"    pm.expect(secondHashtag).to.contain(pm.response.json()[0].hashtags[1]);",
																	"});",
																	"",
																	"pm.test(\"Returns user\", () => {",
																	"    const user = postman.getEnvironmentVariable(\"user.username\");",
																	"",
																	"    pm.expect(user).to.contain(pm.response.json()[0].user);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}/posts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}",
																"posts"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users"
																	]
																}
															},
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Create post",
											"item": [
												{
													"name": "Username",
													"item": [
														{
															"name": "Non existent",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 404\", () => {",
																			"    pm.response.to.have.status(404);",
																			"});",
																			"",
																			"pm.test(\"Returns non existent error message\", () => {",
																			"    const username = postman.getEnvironmentVariable(\"user.username.2\");",
																			"    const expectedMessage = `User ${username} doesn't exist`;",
																			"",
																			"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username.2}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username.2}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Reference",
													"item": [
														{
															"name": "Null",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": null,\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														},
														{
															"name": "Missing",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														},
														{
															"name": "Bad type (number)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": 2,\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														},
														{
															"name": "Bad type (array)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": [\"{{post.reference.2}}\"],\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														},
														{
															"name": "Bad type (object)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": {\n        \"reference\": \"{{post.reference.2}}\"\n    },\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Description",
													"item": [
														{
															"name": "Bad type (number)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": 2\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														},
														{
															"name": "Bad type (array)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": [\"{{post.description.2}}\"]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														},
														{
															"name": "Bad type (object)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": {\n        \"description\": \"{{post.description.2}}\"\n    }\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Hashtags",
													"item": [
														{
															"name": "Bad type (number)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [2],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														},
														{
															"name": "Bad type (array)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [[\"{{post.hashtags.firstHashtag.2}}\"]],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														},
														{
															"name": "Bad type (object)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Returns status 400\", () => {",
																			"    pm.response.to.have.status(400);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [\n        {\n            \"hashtags\": \"{{post.hashtags.firstHashtag.2}}\"\n        }\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/{{user.username}}/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		"{{user.username}}",
																		"posts"
																	]
																}
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/users/:username/posts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"users",
																				":username",
																				"posts"
																			],
																			"variable": [
																				{
																					"key": "username"
																				}
																			]
																		}
																	},
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Valid request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 201\", () => {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"pm.test(\"Returns header location\", () => {",
																	"    const username = postman.getEnvironmentVariable(\"user.username\");",
																	"    const postId = pm.response.json()._id;",
																	"    const expectedHeaderLocation = `/users/${username}/posts/${postId}`;",
																	"",
																	"    pm.response.to.have.header(\"Location\");",
																	"    pm.response.to.be.header(\"Location\", expectedHeaderLocation);",
																	"});",
																	"",
																	"pm.test(\"Returns ID\", () => {",
																	"    pm.expect(pm.response.json()._id).to.not.equal(null);",
																	"});",
																	"",
																	"pm.test(\"Returns reference\", () => {",
																	"    const reference = postman.getEnvironmentVariable(\"post.reference.2\");",
																	"",
																	"    pm.expect(reference).to.contain(pm.response.json().reference);",
																	"});",
																	"",
																	"pm.test(\"Returns description\", () => {",
																	"    const description = postman.getEnvironmentVariable(\"post.description.2\");",
																	"",
																	"    pm.expect(description).to.contain(pm.response.json().description);",
																	"});",
																	"",
																	"pm.test(\"Returns hashtags\", () => {",
																	"    const firstHashtag = postman.getEnvironmentVariable(\"post.hashtags.firstHashtag.2\");",
																	"    const secondHashtag = postman.getEnvironmentVariable(\"post.hashtags.secondHashtag.2\");",
																	"",
																	"    pm.expect(pm.response.json().hashtags.length).to.be.equal(2);",
																	"    pm.expect(firstHashtag).to.contain(pm.response.json().hashtags[0]);",
																	"    pm.expect(secondHashtag).to.contain(pm.response.json().hashtags[1]);",
																	"});",
																	"",
																	"pm.test(\"Returns user\", () => {",
																	"    const user = postman.getEnvironmentVariable(\"user.username\");",
																	"",
																	"    pm.expect(user).to.contain(pm.response.json().user);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}/posts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}",
																"posts"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/:username/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username",
																		"posts"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Get user",
									"item": [
										{
											"name": "Username",
											"item": [
												{
													"name": "Non existent",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 404\", () => {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Returns non existent error message\", () => {",
																	"    const username = postman.getEnvironmentVariable(\"user.username.2\");",
																	"    const expectedMessage = `User ${username} doesn't exist`;",
																	"",
																	"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username.2}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username.2}}"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users"
																	]
																}
															},
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Valid request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 200\", () => {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Returns username\", () => {",
															"    const username = postman.getEnvironmentVariable(\"user.username\");",
															"",
															"    pm.expect(username).to.contain(pm.response.json().username);",
															"});",
															"",
															"pm.test(\"Returns email\", () => {",
															"    const email = postman.getEnvironmentVariable(\"user.email\");",
															"",
															"    pm.expect(email).to.contain(pm.response.json().email);",
															"});",
															"",
															"pm.test(\"Returns phone number\", () => {",
															"    const phoneNumber = postman.getEnvironmentVariable(\"user.phoneNumber\");",
															"",
															"    pm.expect(phoneNumber).to.contain(pm.response.json().phoneNumber);",
															"});",
															"",
															"pm.test(\"Returns first name\", () => {",
															"    const firstName = postman.getEnvironmentVariable(\"user.firstName\");",
															"",
															"    pm.expect(firstName).to.contain(pm.response.json().firstName);",
															"});",
															"",
															"pm.test(\"Returns last name\", () => {",
															"    const lastName = postman.getEnvironmentVariable(\"user.lastName\");",
															"",
															"    pm.expect(lastName).to.contain(pm.response.json().lastName);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/{{user.username}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"{{user.username}}"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Modify user",
									"item": [
										{
											"name": "Username",
											"item": [
												{
													"name": "Non existent",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 404\", () => {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Returns non existent error message\", () => {",
																	"    const username = postman.getEnvironmentVariable(\"user.username.2\");",
																	"    const expectedMessage = `User ${username} doesn't exist`;",
																	"",
																	"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"{{user.email.new}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.new}}\",\n    \"firstName\": \"{{user.firstName.new}}\",\n    \"lastName\": \"{{user.lastName.new}}\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username.2}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username.2}}"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users"
																	]
																}
															},
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Email",
											"item": [
												{
													"name": "Already in use",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 409\", () => {",
																	"    pm.response.to.have.status(409);",
																	"});",
																	"",
																	"pm.test(\"Returns already in use error message\", () => {",
																	"    const email = postman.getEnvironmentVariable(\"user.email.other\");",
																	"    const expectedMessage = `Email ${email} already in use`;",
																	"",
																	"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"{{user.email.other}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (number)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": 2\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (array)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": [\"{{user.email.new}}\"]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (object)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": {\n        \"email\": \"{{user.email.new}}\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad format",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"badFormat\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Phone number",
											"item": [
												{
													"name": "Already in use",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 409\", () => {",
																	"    pm.response.to.have.status(409);",
																	"});",
																	"",
																	"pm.test(\"Returns already in use error message\", () => {",
																	"    const phoneNumber = postman.getEnvironmentVariable(\"user.phoneNumber.other\");",
																	"    const expectedMessage = `Phone number ${phoneNumber} already in use`;",
																	"",
																	"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{user.phoneNumber.other}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (number)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": 2\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (array)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": [\"{{user.phoneNumber.new}}\"]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (object)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": {\n        \"phoneNumber\": \"{{user.phoneNumber.new}}\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad format",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"badFormat\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "First name",
											"item": [
												{
													"name": "Bad type (number)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"firstName\": 2\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (array)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"firstName\": [\"{{user.firstName.new}}\"]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (object)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"firstName\": {\n        \"firstName\": \"{{user.firstName.new}}\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad format",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"firstName\": \"123\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Last name",
											"item": [
												{
													"name": "Bad type (number)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"lastName\": 2\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (array)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"lastName\": [\"{{user.lastName.new}}\"]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (object)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"lastName\": {\n        \"lastName\": \"{{user.lastName.new}}\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad format",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"lastName\": \"123\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Description",
											"item": [
												{
													"name": "Bad type (number)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": 2\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (array)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": [\"{{user.description}}\"]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (object)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": {\n        \"description\": \"{{user.description}}\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Avatar reference",
											"item": [
												{
													"name": "Bad type (number)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"avatarReference\": 2\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (array)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"avatarReference\": [\"{{user.avatarReference}}\"]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (object)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"avatarReference\": {\n        \"avatarReference\": \"{{user.avatarReference}}\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/{{user.username}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"{{user.username}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Valid request",
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{user.email.new}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.new}}\",\n    \"firstName\": \"{{user.firstName.new}}\",\n    \"lastName\": \"{{user.lastName.new}}\",\n    \"description\": \"{{user.description}}\",\n    \"avatarReference\": \"{{user.avatarReference}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/{{user.username}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"{{user.username}}"
													]
												}
											},
											"response": [
												{
													"name": "Ok",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Get users",
							"item": [
								{
									"name": "Valid request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns status 200\", () => {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Returns list (2 users created)\", () => {",
													"    pm.expect(pm.response.json().length).to.be.equal(2);",
													"});",
													"",
													"pm.test(\"Returns username\", () => {",
													"    const username = postman.getEnvironmentVariable(\"user.username\");",
													"",
													"    pm.expect(username).to.contain(pm.response.json()[0].username);",
													"});",
													"",
													"pm.test(\"Returns email\", () => {",
													"    const email = postman.getEnvironmentVariable(\"user.email.new\");",
													"",
													"    pm.expect(email).to.contain(pm.response.json()[0].email);",
													"});",
													"",
													"pm.test(\"Returns phone number\", () => {",
													"    const phoneNumber = postman.getEnvironmentVariable(\"user.phoneNumber.new\");",
													"",
													"    pm.expect(phoneNumber).to.contain(pm.response.json()[0].phoneNumber);",
													"});",
													"",
													"pm.test(\"Returns first name\", () => {",
													"    const firstName = postman.getEnvironmentVariable(\"user.firstName.new\");",
													"",
													"    pm.expect(firstName).to.contain(pm.response.json()[0].firstName);",
													"});",
													"",
													"pm.test(\"Returns last name\", () => {",
													"    const lastName = postman.getEnvironmentVariable(\"user.lastName.new\");",
													"",
													"    pm.expect(lastName).to.contain(pm.response.json()[0].lastName);",
													"});",
													"",
													"pm.test(\"Returns description\", () => {",
													"    const description = postman.getEnvironmentVariable(\"user.description\");",
													"",
													"    pm.expect(description).to.contain(pm.response.json()[0].description);",
													"});",
													"",
													"pm.test(\"Returns avatar reference\", () => {",
													"    const avatarReference = postman.getEnvironmentVariable(\"user.avatarReference\");",
													"",
													"    pm.expect(avatarReference).to.contain(pm.response.json()[0].avatarReference);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create user",
							"item": [
								{
									"name": "Username",
									"item": [
										{
											"name": "Already in use",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 409\", () => {",
															"    pm.response.to.have.status(409);",
															"});",
															"",
															"pm.test(\"Returns already in use error message\", () => {",
															"    const username = postman.getEnvironmentVariable(\"user.username\");",
															"    const expectedMessage = `Username ${username} already in use`;",
															"",
															"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": null,\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Missing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (number)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": 2,\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (array)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": [\"{{user.username.2}}\"],\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (object)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {\n        \"username\": \"{{user.username.2}}\"\n    },\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad format",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"**_lol\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Email",
									"item": [
										{
											"name": "Already in use",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 409\", () => {",
															"    pm.response.to.have.status(409);",
															"});",
															"",
															"pm.test(\"Returns already in use error message\", () => {",
															"    const email = postman.getEnvironmentVariable(\"user.email.new\");",
															"    const expectedMessage = `Email ${email} already in use`;",
															"",
															"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.new}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": null,\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Missing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (number)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": 2,\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (array)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": [\"{{user.email.2}}\"],\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (object)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": {\n        \"email\": \"{{user.email.2}}\"\n    },\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad format",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"invalidFormat\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Phone number",
									"item": [
										{
											"name": "Already in use",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 409\", () => {",
															"    pm.response.to.have.status(409);",
															"});",
															"",
															"pm.test(\"Returns already in use error message\", () => {",
															"    const phoneNumber = postman.getEnvironmentVariable(\"user.phoneNumber.new\");",
															"    const expectedMessage = `Phone number ${phoneNumber} already in use`;",
															"",
															"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.new}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": null,\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Missing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (number)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": 2,\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (array)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": [\"{{user.phoneNumber.2}}\"],\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (object)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": {\n        \"phoneNumber\": \"{{user.phoneNumber.2}}\"\n    },\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad format",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"badFormat\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "First name",
									"item": [
										{
											"name": "Null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": null,\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Missing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (number)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": 2,\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (array)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": [\"{{user.firstName.2}}\"],\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (object)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": {\n        \"firstName\": \"{{user.firstName.2}}\"\n    },\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad format",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"123\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Last name",
									"item": [
										{
											"name": "Null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": null\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Missing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (number)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": 2\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (array)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": [\"{{user.lastName.2}}\"]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad type (object)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": {\n        \"lastName\": \"{{user.lastName.2}}\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bad format",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 400\", () => {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": {{user.username.2}},\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"123\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users"
															]
														}
													},
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Valid request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns status 201\", () => {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"pm.test(\"Returns header location\", () => {",
													"    const username = postman.getEnvironmentVariable(\"user.username.2\");",
													"    const expectedHeaderLocation = `/users/${username}`;",
													"",
													"    pm.response.to.have.header(\"Location\");",
													"    pm.response.to.be.header(\"Location\", expectedHeaderLocation);",
													"});",
													"",
													"pm.test(\"Returns username\", () => {",
													"    const username = postman.getEnvironmentVariable(\"user.username.2\");",
													"",
													"    pm.expect(username).to.contain(pm.response.json().username);",
													"});",
													"",
													"pm.test(\"Returns email\", () => {",
													"    const email = postman.getEnvironmentVariable(\"user.email.2\");",
													"",
													"    pm.expect(email).to.contain(pm.response.json().email);",
													"});",
													"",
													"pm.test(\"Returns phone number\", () => {",
													"    const phoneNumber = postman.getEnvironmentVariable(\"user.phoneNumber.2\");",
													"",
													"    pm.expect(phoneNumber).to.contain(pm.response.json().phoneNumber);",
													"});",
													"",
													"pm.test(\"Returns first name\", () => {",
													"    const firstName = postman.getEnvironmentVariable(\"user.firstName.2\");",
													"",
													"    pm.expect(firstName).to.contain(pm.response.json().firstName);",
													"});",
													"",
													"pm.test(\"Returns last name\", () => {",
													"    const lastName = postman.getEnvironmentVariable(\"user.lastName.2\");",
													"",
													"    pm.expect(lastName).to.contain(pm.response.json().lastName);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{user.username.2}}\",\n    \"email\": \"{{user.email.2}}\",\n    \"phoneNumber\": \"{{user.phoneNumber.2}}\",\n    \"firstName\": \"{{user.firstName.2}}\",\n    \"lastName\": \"{{user.lastName.2}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "posts",
					"item": [
						{
							"name": "{postId}",
							"item": [
								{
									"name": "Get post",
									"item": [
										{
											"name": "Post ID",
											"item": [
												{
													"name": "Non existent",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 404\", () => {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Returns non existent error message\", () => {",
																	"    const postId = postman.getEnvironmentVariable(\"post.postId.nonExistent\");",
																	"    const expectedMessage = `Post ${postId} doesn't exist`;",
																	"",
																	"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId.nonExistent}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId.nonExistent}}"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/:username/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username",
																		"posts"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Valid request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 200\", () => {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Returns ID\", () => {",
															"    pm.expect(pm.response.json()._id).to.not.equal(null);",
															"});",
															"",
															"pm.test(\"Returns reference\", () => {",
															"    const reference = postman.getEnvironmentVariable(\"post.reference\");",
															"",
															"    pm.expect(reference).to.contain(pm.response.json().reference);",
															"});",
															"",
															"pm.test(\"Returns description\", () => {",
															"    const description = postman.getEnvironmentVariable(\"post.description\");",
															"",
															"    pm.expect(description).to.contain(pm.response.json().description);",
															"});",
															"",
															"pm.test(\"Returns hashtags\", () => {",
															"    const firstHashtag = postman.getEnvironmentVariable(\"post.hashtags.firstHashtag\");",
															"    const secondHashtag = postman.getEnvironmentVariable(\"post.hashtags.secondHashtag\");",
															"",
															"    pm.expect(pm.response.json().hashtags.length).to.be.equal(2);",
															"    pm.expect(firstHashtag).to.contain(pm.response.json().hashtags[0]);",
															"    pm.expect(secondHashtag).to.contain(pm.response.json().hashtags[1]);",
															"});",
															"",
															"pm.test(\"Returns user\", () => {",
															"    const user = postman.getEnvironmentVariable(\"user.username\");",
															"",
															"    pm.expect(user).to.contain(pm.response.json().user);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/posts/{{post.postId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"posts",
														"{{post.postId}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Modify post",
									"item": [
										{
											"name": "Post ID",
											"item": [
												{
													"name": "Non existent",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 404\", () => {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Returns non existent error message\", () => {",
																	"    const postId = postman.getEnvironmentVariable(\"post.postId.nonExistent\");",
																	"    const expectedMessage = `Post ${postId} doesn't exist`;",
																	"",
																	"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.new}}\",\n        \"{{post.hashtags.secondHashtag.new}}\"\n    ],\n    \"description\": \"{{post.description.new}}\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId.nonExistent}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId.nonExistent}}"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/:username/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username",
																		"posts"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Description",
											"item": [
												{
													"name": "Bad type (number)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": 2\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (array)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": [\"{{post.description.new}}\"]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Bad type (object)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": {\n        \"description\": \"{{post.description.new}}\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId}}"
															]
														}
													},
													"response": [
														{
															"name": "Ok",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/users/:username",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Hashtags",
											"item": [
												{
													"name": "Bad type (number)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hashtags\": [2]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId}}"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/:username/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username",
																		"posts"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
														}
													]
												},
												{
													"name": "Bad type (array)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hashtags\": [[\"{{post.hashtags.firstHashtag.new}}\"]]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId}}"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/:username/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username",
																		"posts"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
														}
													]
												},
												{
													"name": "Bad type (object)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 400\", () => {",
																	"    pm.response.to.have.status(400);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hashtags\": [{\n        \"hashtags\": \"{{post.hashtags.firstHashtag.new}}\"\n    }]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId}}"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/:username/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username",
																		"posts"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Valid request",
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.new}}\",\n        \"{{post.hashtags.secondHashtag.new}}\"\n    ],\n    \"description\": \"{{post.description.new}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/posts/{{post.postId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"posts",
														"{{post.postId}}"
													]
												}
											},
											"response": [
												{
													"name": "Ok",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "Delete post",
									"item": [
										{
											"name": "Post ID",
											"item": [
												{
													"name": "Non existent",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Returns status 404\", () => {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Returns non existent error message\", () => {",
																	"    const postId = postman.getEnvironmentVariable(\"post.postId.nonExistent\");",
																	"    const expectedMessage = `Post ${postId} doesn't exist`;",
																	"",
																	"    pm.expect(expectedMessage).to.contain(pm.response.json().message);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"reference\": \"{{post.reference.2}}\",\n    \"hashtags\": [\n        \"{{post.hashtags.firstHashtag.2}}\",\n        \"{{post.hashtags.secondHashtag.2}}\"\n    ],\n    \"description\": \"{{post.description.2}}\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/posts/{{post.postId.nonExistent}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"posts",
																"{{post.postId.nonExistent}}"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"reference\": \"<string>\",\n    \"hashtags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/users/:username/posts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"users",
																		":username",
																		"posts"
																	],
																	"variable": [
																		{
																			"key": "username"
																		}
																	]
																}
															},
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"exercitation eu irure nisi consequat\",\n \"reference\": \"proident amet\",\n \"hashtags\": [\n  \"esse in\",\n  \"deserunt qui in aliqua\"\n ],\n \"user\": \"id sint\",\n \"createdAt\": \"2000-04-29T14:06:11.130Z\",\n \"description\": \"voluptate tempor\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Valid request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Returns status 200\", () => {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/posts/{{post.postId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"posts",
														"{{post.postId}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Get posts",
							"item": [
								{
									"name": "Valid request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns status 200\", () => {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Returns list (2 posts created, 1 post deleted)\", () => {",
													"    pm.expect(pm.response.json().length).to.be.equal(1);",
													"});",
													"",
													"pm.test(\"Returns ID\", () => {",
													"    pm.expect(pm.response.json()[0]._id).to.not.equal(null);",
													"});",
													"",
													"pm.test(\"Returns reference\", () => {",
													"    const reference = postman.getEnvironmentVariable(\"post.reference.2\");",
													"",
													"    pm.expect(reference).to.contain(pm.response.json()[0].reference);",
													"});",
													"",
													"pm.test(\"Returns description\", () => {",
													"    const description = postman.getEnvironmentVariable(\"post.description.2\");",
													"",
													"    pm.expect(description).to.contain(pm.response.json()[0].description);",
													"});",
													"",
													"pm.test(\"Returns hashtags\", () => {",
													"    const firstHashtag = postman.getEnvironmentVariable(\"post.hashtags.firstHashtag.2\");",
													"    const secondHashtag = postman.getEnvironmentVariable(\"post.hashtags.secondHashtag.2\");",
													"",
													"    pm.expect(pm.response.json()[0].hashtags.length).to.be.equal(2);",
													"    pm.expect(firstHashtag).to.contain(pm.response.json()[0].hashtags[0]);",
													"    pm.expect(secondHashtag).to.contain(pm.response.json()[0].hashtags[1]);",
													"});",
													"",
													"pm.test(\"Returns user\", () => {",
													"    const user = postman.getEnvironmentVariable(\"user.username\");",
													"",
													"    pm.expect(user).to.contain(pm.response.json()[0].user);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/posts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	]
}
